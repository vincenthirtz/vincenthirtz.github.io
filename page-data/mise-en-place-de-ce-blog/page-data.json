{"componentChunkName":"component---src-templates-blog-post-js","path":"/mise-en-place-de-ce-blog/","webpackCompilationHash":"f9e9c1a7284dae7bfc03","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Vincent Hirtz","author":"Vincent Hirtz"}},"markdownRemark":{"id":"9d23bb22-ddc9-5f58-83ea-d59c5e1e34a8","excerpt":"Ce blog est mis en place grâce à Gatsby, un framework basé sur React qui\npermet de mettre en place rapidement un site statique. Il est possible d’utiliser des…","html":"<p>Ce blog est mis en place grâce à <a href=\"https://www.gatsbyjs.org/\">Gatsby</a>, un framework basé sur React qui\npermet de mettre en place rapidement un site statique. Il est possible d’utiliser des plugins\net des starters, utiles quand on doit générer plusieurs sites avec la même\nlogique.</p>\n<p>Pour ma part, je suis parti sur le starter basique pour la mise en\nplace d’un blog : <a href=\"https://www.gatsbyjs.org/starters/gatsbyjs/gatsby-starter-blog/\">gatsby-starter-blog</a>.\nIl est très basique et j’expliquerai par la suite les améliorations que j’ai pu lui apporter.</p>\n<p>En tout, de l’installation, en passant par la mise à jour des données les plus\nclassiques (principalement les méta-données telle que l’auteur, la bio, le titre)\nà la mise en place sur les serveurs, il m’aura fallu une trentaine de minutes en\ncomptant le temps d’attente pour la disponibilité sur les serveurs, ce qui est\nrelativement correct car je ne connaissais pas l’outil et je me suis baladé\ndans les fichiers pour mettre à jour les informations utiles.</p>\n<hr>\n<p>Pour la mise à disposition sur le web, je passe par les <a href=\"https://pages.github.com/\">Github Pages</a> sous\nforme de page personnelle, c’est à dire que le nom du dépôt Git correspond\nau nom de mon utilisateur <code class=\"language-text\">yoannfleurydev.github.io</code>. Les Github Pages\npermettent de mettre un site statique sur le web gratuitement, ce qui est utile\npour un blog pour éviter les coups d’hébergement.</p>\n<p>Il existe un paquet <a href=\"https://www.npmjs.com/\">npm</a> qui permet de mettre rapidement des pages statiques sur\nles Github Pages : <a href=\"https://www.npmjs.com/package/gh-pages\">gh-pages</a>. J’ai donc ajouté ce paquet à mes dépendances et\nj’ai ajouté une ligne dans mon <code class=\"language-text\">package.json</code> pour faire le déploiement en une\ncommande npm.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// ...</span>\n<span class=\"token property\">\"scripts\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby build &amp;&amp; gh-pages -d public -b master\"</span><span class=\"token punctuation\">,</span></span>  <span class=\"token comment\">// On build, puis on déploie le contenu du dossier public sur master.</span>\n  <span class=\"token comment\">// On le fait sur master car c'est un dépôt Github Pages utilisateur, et le</span>\n  <span class=\"token comment\">// site ne pourra pas se déployer si on le met sur une autre branche.</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ...</span></code></pre></div>\n<p>Maintenant, dès que je veux mettre mon site en ligne, j’ai juste à lancer la\ncommande :</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run deploy</code></pre></div>\n<p>Enfin, comme j’ai mon nom de domaine en <code class=\"language-text\">.dev</code>, j’ai fais en sorte d’ajouter le\nfichier <a href=\"https://github.com/yoannfleurydev/yoannfleurydev.github.io/blob/develop/static/CNAME\"><code class=\"language-text\">static/CNAME</code></a> dans Gatsby de façon à ce que la Github Pages réagisse\nen conséquence et il a aussi fallu que je déclare chez <a href=\"https://www.gandi.net\">Gandi</a> sur quel host devait\npointer le sous domaine <code class=\"language-text\">blog</code> pour être redirigé vers Github.</p>\n<hr>\n<p>Je le disais tout à l’heure, le starter que j’ai utilisé est minimal et il\npublie tous les articles qu’il trouve, peu importe leur état, brouillon ou pas.\nJ’ai donc voulu ajouter moi-même ce système de brouillon, car je veux pouvoir rédiger\nplusieurs articles en même temps sans vouloir qu’ils soient tous publiés.</p>\n<p>J’ai donc commencé par regarder comment fonctionnait le système de méta-données\ndes fichiers markdown. Oui, car je ne l’ai pas précisé pour le moment, mais ces\nbillets de blog sont écrit dans <a href=\"https://github.com/yoannfleurydev/yoannfleurydev.github.io/tree/develop/content/blog\">des fichiers en markdown</a>.\nLe système de méta-données est appelé <code class=\"language-text\">frontmatter</code> et il est possible d’ajouter\ndes éléments personnalisés sans trop de soucis.</p>\n<p>J’ai donc décidé d’ajouter un champs <code class=\"language-text\">published</code> qui doit être mis à <code class=\"language-text\">true</code>\nquand je veux qu’un article soit publié.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Les 3 commandes Git que j'utilise le plus\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2019-01-26T20:00:00.000Z\"</span>\n<span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> Dévouvrons ensemble les 3 commandes git que j'utilise le plus !\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">published</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></span></code></pre></div>\n<p>Ensuite, il a fallu que j’ajoute des filtres dans les requêtes GraphQL de Gatsby\npour ne récupérer que les articles qui sont publiés, c’est à dire, les articles\nà <code class=\"language-text\">true</code>.</p>\n<p>J’ai donc amélioré la requête GraphQL avec un <code class=\"language-text\">filter</code> qui demande à ne\nrécupérer que les articles ayant une méta-données qui est égale à <code class=\"language-text\">true</code>, ce qui\nse traduit par:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">frontmatter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">published</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Désormais, grâce à cette requête pré-traitement, Gatsby ne me génère pas les\npages des articles qui ne sont pas publiés, ce qui correspond au comportement\ndésiré.</p>\n<hr>\n<p>Etant un grand fan des <em>dark themes</em>, je tenais grandement à implémenter cette\ndernière fonctionnalité. Il s’agit d’un CSS automatique en fonction des\npréférences utilisateur, j’ai récemment <a href=\"https://twitter.com/YoannFleuryDev/status/1132689471093260288\">tweeté</a> sur cette implémentation.</p>\n<p>Il faut savoir qu’à l’écriture de cet article, ça ne fonctionne que sur Firefox\n67 et Safari 12.1, et arrivera sur Chrome dans la version 76 ou 77 selon\n<a href=\"https://caniuse.com/#feat=prefers-color-scheme\">caniuse.com</a>. À noter que ça\nne fonctionne sur aucun navigateur mobile pour le moment.</p>\n<p>Si vous disposez d’une machine sous Windows ou MacOS, il est possible de changer\nvotre préférence de thème dans les paramètres de votre OS, et le blog devrait\nchanger de couleur si vous êtes sous Firefox ou Safari.</p>\n<p>Voici la <em>media query</em> qui me permet de gérer cette préférence utilisateur</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">prefers-color-scheme</span><span class=\"token punctuation\">:</span> dark<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-webkit-font-smoothing</span><span class=\"token punctuation\">:</span> antialiased<span class=\"token punctuation\">;</span>\n\n    <span class=\"token property\">--bg</span><span class=\"token punctuation\">:</span> #282c35<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">--header</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">--textNormal</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 0.88<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">--textTitle</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">--textLink</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">--hr</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0%<span class=\"token punctuation\">,</span> 100%<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">--inlineCode-bg</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>222<span class=\"token punctuation\">,</span> 14%<span class=\"token punctuation\">,</span> 25%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">--inlineCode-text</span><span class=\"token punctuation\">:</span> #e6e6e6<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--inlineCode-text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">blockquote</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #d1d1d1<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Au final, grâce aux variables CSS, je n’ai pas besoin de redéfinir toutes les\nrègles, mais juste les variables que j’utilise dans mon CSS, ce qui évite une\nénorme duplication, et encore, il y a des choses à améliorer (on peut prendre\nici l’exemple de <code class=\"language-text\">blockquote</code> qui pourrait être défini en dehors, et juste lui\nfournir une variable), je ne suis pas expert en CSS, et je n’ai pour le moment\npas passé beaucoup de temps dessus.</p>\n<hr>\n<p>Voilà pour le petit tour sur la création de ce blog. Je suis surement passé à\ncôté de chose, mais si vous avez des questions, je suis disponible pour en parler\nsur <a href=\"https://twitter.com/yoannfleurydev\">Twitter</a>, ou bien IRL si on se croise.</p>","frontmatter":{"title":"Mise en place de ce blog","date":"27/05/2019","description":"Découvrons ensemble ce qui se cache derrière ce blog, et les améliorations que j'ai apportées au projet de base"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/mise-en-place-de-ce-blog/","previous":{"fields":{"slug":"/3-commandes-git/"},"frontmatter":{"title":"Les 3 commandes Git que j'utilise le plus"}},"next":{"fields":{"slug":"/automatisation-de-la-publication-du-blog/"},"frontmatter":{"title":"Automatisation du déploiement du blog"}}}}}
{"version":3,"sources":["webpack:///./src/pages/photos.js"],"names":["ImageZoom","zoom","props","clone","background","color","attachZoom","image","attach","render","src","this","alt","ref","data-zoom-src","zoomSrc","React","Component","Photos","data","location","useState","renderedImages","setRenderedImages","images","allFile","edges","useEffect","style","display","alignItems","flexWrap","justifyContent","map","node","name","key","id","childImageSharp","fixed","srcSet","objectFit","width","height","mediumZoom","margin","publicURL","title","site","siteMetadata","pageQuery"],"mappings":"2MAMMA,E,4JAGJC,KAAO,EAAKC,MAAMD,KAAKE,MAAM,CAC3BC,WAAY,EAAKF,MAAMG,Q,EAGzBC,WAAa,SAAAC,GACX,EAAKN,KAAKO,OAAOD,I,4GAGnBE,OAAA,WACE,OACE,yBACEC,IAAKC,KAAKT,MAAMQ,IAChBE,IAAKD,KAAKT,MAAMU,IAChBC,IAAKF,KAAKL,WACVQ,gBAAeH,KAAKT,MAAMa,W,GAjBVC,IAAMC,WAkEfC,UA3CA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EACOJ,IAAMK,SAAS,+BAApDC,EAD8B,KACdC,EADc,KAE/BC,EAASL,EAAKM,QAAQC,MA2B5B,OAzBAV,IAAMW,WAAU,WACdJ,EACE,yBACEK,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,SAAU,OACVC,eAAgB,iBAGjBR,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACV,kBAAClC,EAAD,CACEY,IAAKsB,EAAKC,KACVC,IAAKF,EAAKG,GACV3B,IAAKwB,EAAKI,gBAAgBC,MAAM7B,IAChC8B,OAAQN,EAAKI,gBAAgBC,MAAMC,OACnCZ,MAAO,CAAEa,UAAW,QAASC,MAAO,QAASC,OAAQ,SACrD1C,KAAM2C,YAAW,CAAEC,OAAQ,KAC3B9B,QAASmB,EAAKY,mBAKrB,CAACtB,IAGF,kBAAC,IAAD,CAAQJ,SAAUA,EAAU2B,MAAO5B,EAAK6B,KAAKC,aAAaF,OACxD,kBAAC,IAAD,CAAKA,MAAM,WACX,0CACA,8MAKCzB,IAOA,IAAM4B,EAAS","file":"component---src-pages-photos-js-056812e39b2156e7504c.js","sourcesContent":["import React from \"react\"\r\nimport SEO from \"../components/seo\"\r\nimport Layout from \"../components/layout\"\r\nimport { graphql } from \"gatsby\"\r\nimport mediumZoom from \"medium-zoom\"\r\n\r\nclass ImageZoom extends React.Component {\r\n  // Leave this part so I can add a calculated color later.\r\n  // Calculated color will be like Twitter, the most present color in the image.\r\n  zoom = this.props.zoom.clone({\r\n    background: this.props.color,\r\n  })\r\n\r\n  attachZoom = image => {\r\n    this.zoom.attach(image)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <img\r\n        src={this.props.src}\r\n        alt={this.props.alt}\r\n        ref={this.attachZoom}\r\n        data-zoom-src={this.props.zoomSrc}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst Photos = ({ data, location }) => {\r\n  const [renderedImages, setRenderedImages] = React.useState(<div />)\r\n  const images = data.allFile.edges\r\n\r\n  React.useEffect(() => {\r\n    setRenderedImages(\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        {images.map(({ node }) => (\r\n          <ImageZoom\r\n            alt={node.name}\r\n            key={node.id}\r\n            src={node.childImageSharp.fixed.src}\r\n            srcSet={node.childImageSharp.fixed.srcSet}\r\n            style={{ objectFit: \"cover\", width: \"120px\", height: \"120px\" }}\r\n            zoom={mediumZoom({ margin: 24 })}\r\n            zoomSrc={node.publicURL}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }, [images])\r\n\r\n  return (\r\n    <Layout location={location} title={data.site.siteMetadata.title}>\r\n      <SEO title=\"Photos\" />\r\n      <h1>Mes photos</h1>\r\n      <p>\r\n        Ces images sont en qualités réduites, vous pouvez les voir en haute\r\n        qualité en cliquant dessus. Elles peuvent mettre un certain délais à\r\n        zoomer en fonction de votre connexion.\r\n      </p>\r\n      {renderedImages}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Photos\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allFile(\r\n      filter: { sourceInstanceName: { eq: \"media\" } }\r\n      sort: { fields: name, order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          publicURL\r\n          name\r\n          childImageSharp {\r\n            id\r\n            fixed(width: 200) {\r\n              src\r\n              srcSet\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}